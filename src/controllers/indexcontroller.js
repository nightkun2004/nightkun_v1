const path = require("path")
const Video = require("../../models/videoModel")

const getHome = (req, res) => {
    const userID = req.session?.userlogin;
    try {
        res.render("./layouts/main", {
            title: "Nightkun | ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å",
            content: path.join(__dirname, "../views/index"),
            active: "home",
            headerBar: "pribta",
            userID
        });
    } catch (err) {
        res.status(500).render("./layouts/main", {
            error: err,
            title: '500 - Internal Server Error',
            active: "error",
            headerBar: "pribta",
            userID
        });
    }
};

const getActivities = (req, res) => {
    const userID = req.session?.userlogin;
    try {
        res.render("./layouts/main", {
            title: "‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°",
            content: path.join(__dirname, "../views/pages/activities"),
            active: "activities",
            headerBar: "pribta",
            userID
        });
    } catch (err) {
        res.status(500).render("./layouts/main", {
            error: err,
            title: '500 - Internal Server Error',
            active: "error",
            headerBar: "pribta",
            userID
        });
    }
};

const getHappeningNow = (req, res) => {
    const { username } = req.params;
    const userID = req.session?.userlogin;
    try {
        res.render("./layouts/main", {
            title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ",
            content: path.join(__dirname, "../views/pages/Happening"),
            active: "Happening",
            headerBar: "pribta",
            userID
        });
    } catch (err) {
        res.status(500).render("./layouts/main", {
            error: err,
            title: '500 - Internal Server Error',
            active: "error",
            headerBar: "pribta",
            userID
        });
    }
};

const getPribta = async (req, res) => {
    const { username } = req.params;
    const userID = req.session?.userlogin;
    const userCountry = req.userCountry; 
    try {

        const data_pribtas = await Video.find({
            $or: [
                { allowedRegions: { $exists: false } }, // ‚úÖ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ allowedRegions ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏î‡∏π‡πÑ‡∏î‡πâ
                { allowedRegions: { $size: 0 } }, // ‚úÖ ‡∏ñ‡πâ‡∏≤ allowedRegions ‡πÄ‡∏õ‡πá‡∏ô [] (‡∏ß‡πà‡∏≤‡∏á) ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏î‡∏π‡πÑ‡∏î‡πâ
                // { allowedRegions: userCountry } // ‚úÖ ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï
            ]
        }).populate("ownerId").sort({ createdAt: -1 }).exec();

        res.render("./layouts/main", {
            title: "Pribta",
            content: path.join(__dirname, "../views/pages/pribta"),
            active: "pribta",
            headerBar: "hidden",
            userID,
            data_pribtas
        });
    } catch (err) {
        res.status(500).render("./layouts/main", {
            error: err,
            title: '500 - Internal Server Error',
            active: "error",
            headerBar: "pribta",
            userID
        });
    }
};

const getUploadPribta = async (req, res) => {
    const userID = req.session?.userlogin;
    try {
        res.render("./layouts/main", {
            title: "Pribta",
            content: path.join(__dirname, "../views/uploads/video"),
            active: "UploadPribta",
            headerBar: "pribta",
            userID
        });
    } catch (err) {
        res.status(500).render("./layouts/main", {
            error: err,
            title: '500 - Internal Server Error',
            active: "error",
            headerBar: "pribta",
            userID
        });
    }
}

const getRedeem = async (req, res) => {
    try {
        res.render("./pages/redeem", { active: "redeem" })
    } catch (error) {
        console.log(error)
    }
}

// üîπ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° Middleware ‡πÄ‡∏ä‡πà‡∏ô ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö JWT ‡∏´‡∏£‡∏∑‡∏≠ session
const User = require("../../models/userModel")


const getProfile = async (req, res) => {
    let { username } = req.params;
    const userID = req.session?.userlogin;

    // üîπ ‡∏ï‡∏±‡∏î "@" ‡∏≠‡∏≠‡∏Å‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    if (username.startsWith("@")) {
        username = username.slice(1);
    }

    try {
        // console.log("üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ username:", username);
        const user = await User.findOne({ username }).exec();

        if (!user) {
            console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:", username);
            return res.status(404).render("./layouts/main", {
                title: "404 - ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ",
                content: path.join(__dirname, "../views/pages/notfound"),
                active: "error",
                userID
            });
        }

        // console.warn("‡πÄ‡∏à‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‚úÖ:", username);
        console.log(user)
        res.render("./layouts/main", {
            title: `Nightkun | ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á ${username}`,
            content: path.join(__dirname, "../views/pages/profile"),
            active: "profile",
            headerBar: "pribta",
            userID,
            user
        });
    } catch (err) {
        console.error("‚ùå Error in getProfile:", err);
        res.status(500).render("./layouts/main", {
            error: err,
            title: "500 - Internal Server Error",
            content: path.join(__dirname, "../views/pages/profile"),
            active: "error",
            headerBar: "pribta",
            userID
        });
    }
};


module.exports = {
    getHome,
    getActivities,
    getHappeningNow,
    getPribta,
    getProfile,
    getUploadPribta,
    getRedeem
}