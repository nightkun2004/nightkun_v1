const axios = require("axios");
const FormData = require("form-data");
const jwt = require("jsonwebtoken");

const UploadToServer = async (req, res) => {
    try {
        if (!req.files || !req.files.video) {
            return res.status(400).json({ error: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠" });
        }

        const videoUrl = "https://sv8.nightkun.com/api/v2/server/upload";
        const videoFile = req.files.video;

        const formData = new FormData();
        formData.append("video", videoFile.data, { filename: videoFile.name });

        // üìå ‡∏™‡πà‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏Å‡πá‡∏ö‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
        const response = await axios.post(videoUrl, formData, {
            headers: {
                ...formData.getHeaders(),
                "Authorization": `Bearer ${process.env.ACCESS_TOKEN}`
            },
        });

        if (!response.data.videoId) {
            throw new Error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÑ‡∏î‡πâ");
        }

        const videoId = response.data.videoId;
        const expires = Math.floor(Date.now() / 1000) + 3600; // ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏ô 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
        const token = jwt.sign({ videoId, exp: expires }, process.env.JWT_SECRET);

        // ‚úÖ ‡∏™‡πà‡∏á URL ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÉ‡∏´‡πâ Client
        res.json({
            success: true,
            videoUrl: `https://sv8.nightkun.com/api/v2/server/stream/${videoId}?tk=${token}&expires=${expires}`,
            videoID: videoId
        });

    } catch (error) {
        console.error("Upload Error:", error.response ? error.response.data : error.message);
        res.status(500).json({
            success: false,
            error: error.response ? error.response.data.error : "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠"
        });
    }
};

module.exports = UploadToServer;
